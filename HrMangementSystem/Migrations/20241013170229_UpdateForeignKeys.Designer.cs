// <auto-generated />
using System;
using HrMangementSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HrMangementSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241013170229_UpdateForeignKeys")]
    partial class UpdateForeignKeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HrMangementSystem.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("ManagerId")
                        .IsUnique();

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Human Resources",
                            Location = "Building A",
                            ManagerId = 1
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "IT",
                            Location = "Building B",
                            ManagerId = 2
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "Marketing",
                            Location = "Building C",
                            ManagerId = 3
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "Sales",
                            Location = "Building D",
                            ManagerId = 4
                        },
                        new
                        {
                            DepartmentId = 5,
                            DepartmentName = "Finance",
                            Location = "Building E",
                            ManagerId = 5
                        });
                });

            modelBuilder.Entity("HrMangementSystem.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            DateOfBirth = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "michael.jordan@example.com",
                            FirstName = "Michael",
                            Gender = "Male",
                            HireDate = new DateTime(2020, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "1.jpg",
                            LastName = "Jordan",
                            Phone = "111-111-1111",
                            Position = "HR Specialist",
                            Salary = 50000m
                        },
                        new
                        {
                            EmployeeId = 2,
                            DateOfBirth = new DateTime(1990, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "serena.williams@example.com",
                            FirstName = "Serena",
                            Gender = "Female",
                            HireDate = new DateTime(2021, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "1.jpg",
                            LastName = "Williams",
                            Phone = "222-222-2222",
                            Position = "IT Specialist",
                            Salary = 60000m
                        },
                        new
                        {
                            EmployeeId = 3,
                            DateOfBirth = new DateTime(1988, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "lebron.james@example.com",
                            FirstName = "LeBron",
                            Gender = "Male",
                            HireDate = new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "1.jpg",
                            LastName = "James",
                            Phone = "333-333-3333",
                            Position = "Marketing Analyst",
                            Salary = 55000m
                        },
                        new
                        {
                            EmployeeId = 4,
                            DateOfBirth = new DateTime(1996, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Email = "simone.biles@example.com",
                            FirstName = "Simone",
                            Gender = "Female",
                            HireDate = new DateTime(2022, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "1.jpg",
                            LastName = "Biles",
                            Phone = "444-444-4444",
                            Position = "Sales Representative",
                            Salary = 48000m
                        },
                        new
                        {
                            EmployeeId = 5,
                            DateOfBirth = new DateTime(1987, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            Email = "lionel.messi@example.com",
                            FirstName = "Lionel",
                            Gender = "Male",
                            HireDate = new DateTime(2020, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Image = "1.jpg",
                            LastName = "Messi",
                            Phone = "555-555-5555",
                            Position = "Finance Analyst",
                            Salary = 70000m
                        });
                });

            modelBuilder.Entity("HrMangementSystem.Models.Manager", b =>
                {
                    b.Property<int>("ManagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManagerId"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManagerId");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            ManagerId = 1,
                            DepartmentID = 0,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "123-456-7890",
                            Position = "HR Manager"
                        },
                        new
                        {
                            ManagerId = 2,
                            DepartmentID = 0,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Phone = "987-654-3210",
                            Position = "IT Manager"
                        },
                        new
                        {
                            ManagerId = 3,
                            DepartmentID = 0,
                            Email = "bob.brown@example.com",
                            FirstName = "Bob",
                            LastName = "Brown",
                            Phone = "555-555-5555",
                            Position = "Marketing Manager"
                        },
                        new
                        {
                            ManagerId = 4,
                            DepartmentID = 0,
                            Email = "alice.white@example.com",
                            FirstName = "Alice",
                            LastName = "White",
                            Phone = "444-444-4444",
                            Position = "Sales Manager"
                        },
                        new
                        {
                            ManagerId = 5,
                            DepartmentID = 0,
                            Email = "tom.green@example.com",
                            FirstName = "Tom",
                            LastName = "Green",
                            Phone = "333-333-3333",
                            Position = "Finance Manager"
                        });
                });

            modelBuilder.Entity("HrMangementSystem.Models.Objective", b =>
                {
                    b.Property<int>("ObjectiveID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjectiveID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ObjectiveDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectiveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectiveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ObjectiveID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Objectives");
                });

            modelBuilder.Entity("HrMangementSystem.Models.PerformanceProgress", b =>
                {
                    b.Property<int>("ProgressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgressID"));

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("ObjectiveID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProgressDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProgressDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgressID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ObjectiveID");

                    b.ToTable("PerformanceProgresses");
                });

            modelBuilder.Entity("HrMangementSystem.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            Email = "alice.johnson@example.com",
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Password = "hashed_password1",
                            Role = "HR"
                        },
                        new
                        {
                            StaffId = 2,
                            Email = "bob.smith@example.com",
                            FirstName = "Bob",
                            LastName = "Smith",
                            Password = "hashed_password2",
                            Role = "Manager"
                        },
                        new
                        {
                            StaffId = 3,
                            Email = "charlie.brown@example.com",
                            FirstName = "Charlie",
                            LastName = "Brown",
                            Password = "hashed_password3",
                            Role = "Employee"
                        });
                });

            modelBuilder.Entity("HrMangementSystem.Models.Department", b =>
                {
                    b.HasOne("HrMangementSystem.Models.Manager", "Manager")
                        .WithOne("Department")
                        .HasForeignKey("HrMangementSystem.Models.Department", "ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("HrMangementSystem.Models.Employee", b =>
                {
                    b.HasOne("HrMangementSystem.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("HrMangementSystem.Models.Objective", b =>
                {
                    b.HasOne("HrMangementSystem.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrMangementSystem.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Department");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HrMangementSystem.Models.PerformanceProgress", b =>
                {
                    b.HasOne("HrMangementSystem.Models.Employee", "Employee")
                        .WithMany("PerformanceProgresses")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HrMangementSystem.Models.Objective", "Objective")
                        .WithMany("PerformanceProgresses")
                        .HasForeignKey("ObjectiveID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("HrMangementSystem.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HrMangementSystem.Models.Employee", b =>
                {
                    b.Navigation("PerformanceProgresses");
                });

            modelBuilder.Entity("HrMangementSystem.Models.Manager", b =>
                {
                    b.Navigation("Department")
                        .IsRequired();
                });

            modelBuilder.Entity("HrMangementSystem.Models.Objective", b =>
                {
                    b.Navigation("PerformanceProgresses");
                });
#pragma warning restore 612, 618
        }
    }
}
